{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DF\\\\Documents\\\\GitHub\\\\Lambda\\\\PortfolioSite\\\\portfolio\\\\src\\\\components\\\\Game.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Game() {\n  const [canvas, setCanvas] = useState();\n  let canvasRef = React.createRef();\n  useEffect(() => {\n    setCanvas(canvasRef.current);\n    console.log(\"Canvas:\", canvas);\n  }, [canvasRef]);\n\n  if (canvas) {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let context = canvas.getContext(\"2d\");\n    context.fillRect(100, 100, 100, 100);\n  }\n\n  return React.createElement(\"canvas\", {\n    ref: canvasRef,\n    id: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/DF/Documents/GitHub/Lambda/PortfolioSite/portfolio/src/components/Game.js"],"names":["React","useEffect","useState","Game","canvas","setCanvas","canvasRef","createRef","current","console","log","width","window","innerWidth","height","innerHeight","context","getContext","fillRect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,IAAT,GAAgB;AAEZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAApC;AAEA,MAAII,SAAS,GAAGN,KAAK,CAACO,SAAN,EAAhB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,SAAS,CAACC,SAAS,CAACE,OAAX,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,MAAvB;AACH,GAHQ,EAGN,CAACE,SAAD,CAHM,CAAT;;AAKA,MAAIF,MAAJ,EAAY;AAERA,IAAAA,MAAM,CAACO,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAT,IAAAA,MAAM,CAACU,MAAP,GAAgBF,MAAM,CAACG,WAAvB;AAEA,QAAIC,OAAO,GAAGZ,MAAM,CAACa,UAAP,CAAkB,IAAlB,CAAd;AAEAD,IAAAA,OAAO,CAACE,QAAR,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC;AACH;;AAED,SACI;AAAQ,IAAA,GAAG,EAAEZ,SAAb;AAAwB,IAAA,EAAE,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAED,eAAeH,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Game() {\r\n\r\n    const [canvas, setCanvas] = useState();\r\n\r\n    let canvasRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        setCanvas(canvasRef.current);\r\n        console.log(\"Canvas:\", canvas)\r\n    }, [canvasRef])\r\n\r\n    if (canvas) {\r\n\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        let context = canvas.getContext(\"2d\");\r\n\r\n        context.fillRect(100, 100, 100, 100);\r\n    }\r\n\r\n    return (\r\n        <canvas ref={canvasRef} id=\"game\"></canvas>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}