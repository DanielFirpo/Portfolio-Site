{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DF\\\\Documents\\\\GitHub\\\\Lambda\\\\PortfolioSite\\\\portfolio\\\\src\\\\components\\\\Game.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Game() {\n  const [canvas, setCanvas] = useState();\n  const [size, setSize] = useState();\n  let canvasRef = React.createRef();\n  useEffect(() => {\n    function handleResize() {\n      console.log('resized to: ', window.innerWidth, 'x', window.innerHeight);\n      window.addEventListener('resize', handleResize);\n    }\n  });\n  useEffect(() => {\n    setCanvas(canvasRef.current);\n    console.log(\"Canvas:\", canvas);\n  }, [canvasRef]);\n\n  if (canvas) {\n    let context = canvas.getContext(\"2d\");\n    context.fillRect(100, 100, 100, 100);\n  }\n\n  return React.createElement(\"canvas\", {\n    ref: canvasRef,\n    id: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/DF/Documents/GitHub/Lambda/PortfolioSite/portfolio/src/components/Game.js"],"names":["React","useEffect","useState","Game","canvas","setCanvas","size","setSize","canvasRef","createRef","handleResize","console","log","window","innerWidth","innerHeight","addEventListener","current","context","getContext","fillRect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,IAAT,GAAgB;AAEZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAApC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAEA,MAAIM,SAAS,GAAGR,KAAK,CAACS,SAAN,EAAhB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASS,YAAT,GAAwB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,MAAM,CAACC,UAAnC,EAA+C,GAA/C,EAAoDD,MAAM,CAACE,WAA3D;AACFF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AACD;AACJ,GALQ,CAAT;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,SAAS,CAACG,SAAS,CAACS,OAAX,CAAT;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,MAAvB;AACH,GAHQ,EAGN,CAACI,SAAD,CAHM,CAAT;;AAKA,MAAIJ,MAAJ,EAAY;AAER,QAAIc,OAAO,GAAGd,MAAM,CAACe,UAAP,CAAkB,IAAlB,CAAd;AAEAD,IAAAA,OAAO,CAACE,QAAR,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC;AACH;;AAED,SACI;AAAQ,IAAA,GAAG,EAAEZ,SAAb;AAAwB,IAAA,EAAE,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAED,eAAeL,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Game() {\r\n\r\n    const [canvas, setCanvas] = useState();\r\n    const [size, setSize] = useState();\r\n\r\n    let canvasRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            console.log('resized to: ', window.innerWidth, 'x', window.innerHeight)\r\n          window.addEventListener('resize', handleResize)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        setCanvas(canvasRef.current);\r\n        console.log(\"Canvas:\", canvas)\r\n    }, [canvasRef])\r\n\r\n    if (canvas) {\r\n\r\n        let context = canvas.getContext(\"2d\");\r\n\r\n        context.fillRect(100, 100, 100, 100);\r\n    }\r\n\r\n    return (\r\n        <canvas ref={canvasRef} id=\"game\"></canvas>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}