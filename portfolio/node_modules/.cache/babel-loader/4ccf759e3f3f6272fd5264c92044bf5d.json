{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DF\\\\Documents\\\\GitHub\\\\Lambda\\\\PortfolioSite\\\\portfolio\\\\src\\\\components\\\\Game.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Game() {\n  const [canvas, setCanvas] = useState();\n  let canvasRef = React.createRef();\n  useEffect(() => {\n    setCanvas(canvasRef.current);\n    console.log(\"Canvas:\", canvas);\n  }, [canvasRef]); // if(true) {\n  //     return <></>\n  // }\n  // let context = canvas.getContext(\"2d\");\n  // context.fillRect(100, 100, 100, 100);\n\n  return React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    id: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/DF/Documents/GitHub/Lambda/PortfolioSite/portfolio/src/components/Game.js"],"names":["React","useEffect","useState","Game","canvas","setCanvas","canvasRef","createRef","current","console","log","width","window","innerWidth","height","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,IAAT,GAAgB;AAEZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAApC;AAEA,MAAII,SAAS,GAAGN,KAAK,CAACO,SAAN,EAAhB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,SAAS,CAACC,SAAS,CAACE,OAAX,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,MAAvB;AACH,GAHQ,EAGN,CAACE,SAAD,CAHM,CAAT,CANY,CAWZ;AACA;AACA;AAEA;AAEA;;AAEF,SACI;AAAQ,IAAA,GAAG,EAAEA,SAAb;AAAwB,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAf;AAA2BC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAA1C,KAA/B;AAAuF,IAAA,EAAE,EAAC,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGD;;AAED,eAAeZ,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Game() {\r\n\r\n    const [canvas, setCanvas] = useState();\r\n\r\n    let canvasRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        setCanvas(canvasRef.current);\r\n        console.log(\"Canvas:\", canvas)\r\n    }, [canvasRef])\r\n\r\n    // if(true) {\r\n    //     return <></>\r\n    // }\r\n\r\n    // let context = canvas.getContext(\"2d\");\r\n\r\n    // context.fillRect(100, 100, 100, 100);\r\n\r\n  return (\r\n      <canvas ref={canvasRef} style={{width: window.innerWidth, height: window.innerHeight}} id=\"game\"></canvas>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}